AWSTemplateFormatVersion: 2010-09-09
Resources:
  ElasticstackFunctionbeatLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaENIManagementAccess'
      Path: /
      RoleName: Functionbeat-role
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: Functionbeat-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                - 's3:ListBucket'
                - 's3:GetBucketLocation'
                - 's3:ListBucketMultipartUploads'
                - 's3:ListBucketVersions'
                - 's3:GetObject'
                - 's3:PutObject'
                - 's3:DeleteObject'
                - 's3:AbortMultipartUpload'
                - 's3:ListMultipartUploadParts'
                - 'lambda:AddPermission'
                - 'lambda:CreateFunction'
                - 'lambda:DeleteFunction'
                - 'lambda:GetFunction'
                - 'lambda:GetFunctionConfiguration'
                - 'lambda:PutFunctionConcurrency'
                - 'lambda:RemovePermission'
                - 'lambda:UpdateFunctionCode'
                - 'lambda:UpdateFunctionConfiguration'
                - 'lambda:InvokeFunction'
                - 'logs:CreateLogGroup'
                - 'logs:DeleteLogGroup'
                - 'logs:DeleteSubscriptionFilter'
                - 'logs:DescribeLogGroups'
                - 'logs:PutSubscriptionFilter'
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
                - 'ec2:DescribeNetworkInterfaces'
                - 'ec2:Start*'
                - 'ec2:Stop*'
                - 'ec2:Describe*'
                - 'secretsmanager:GetSecretValue'
                Effect: Allow
                Resource: '*'